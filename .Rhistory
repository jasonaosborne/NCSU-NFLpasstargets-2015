temp <- temp[[1]][c(length(temp[[1]])-1, length(temp[[1]]))]
targetName <- paste(temp[1],temp[2])
#cleanup
rm(targetPos,temp)
test <- PBP$Detail[4]
test
test <- PBP$Detail[3]
test
targetPos <- ifelse(regexpr(' complete to ',test) > 0,
regexpr(' complete to ',test),
regexpr(' intended for ',test))
temp <- strsplit(substr(test,start = targetPos, stop = nchar(test)), " ")
temp <- temp[[1]][c(length(temp[[1]])-1, length(temp[[1]]))]
targetName <- paste(temp[1],temp[2])
targetPos <- ifelse(regexpr(' complete to ',test) > 0,
regexpr(' complete to ',test),
regexpr(' intended for ',test))
temp <- strsplit(substr(test,start = targetPos, stop = nchar(test)), " ")
temp
targetName <- paste(temp[[1]][4],temp[[1]][5])
rm(targetPos,temp) # cleanup
grep('yards',test)
test
temp <- substr(test,start=1,stop =regexpr(' yards',test))
temp
temp <- substr(test,start=1,stop =regexpr('yards',test))
temp
temp <- substr(test,start=1,stop=(regexpr(' yards',test)-1))
temp
temp <- strsplit(substr(test,start=1,stop=(regexpr(' yards',test)-1))," ")
temp
yds <- as.numeric(temp[[1]][length(temp[[1]])])
rm(qbName)
rm(targetName)
rm(yds)
rm(temp)
View(plays)
test <- plays[154]
test <- plays$Detail[154]
test <- plays$Detail[68]
test
#getting QB name
qbName <- substr(test,start = 1,stop = regexpr(' pass',test)-1)
#getting target information
targetPos <- ifelse(regexpr(' complete to ',test) > 0,
regexpr(' complete to ',test),
regexpr(' intended for ',test))
temp <- strsplit(substr(test,start = targetPos, stop = nchar(test)), " ")
targetName <- paste(temp[[1]][4],temp[[1]][5])
rm(targetPos,temp) # cleanup
#getting yards
temp <- strsplit(substr(test,start=1,stop=(regexpr(' yards',test)-1))," ")
yds <- as.numeric(temp[[1]][length(temp[[1]])])
test
rownames(plays) <- NULL
test <- plays$Detail[58]
test
#getting QB name
qbName <- substr(test,start = 1,stop = regexpr(' pass',test)-1)
#getting target information
targetPos <- ifelse(regexpr(' complete to ',test) > 0,
regexpr(' complete to ',test),
regexpr(' intended for ',test))
temp <- strsplit(substr(test,start = targetPos, stop = nchar(test)), " ")
targetName <- paste(temp[[1]][4],temp[[1]][5])
rm(targetPos,temp) # cleanup
#getting yards
temp <- strsplit(substr(test,start=1,stop=(regexpr(' yards',test)-1))," ")
yds <- as.numeric(temp[[1]][length(temp[[1]])])
temp
length(temp[[1]])
length(temp[[1]]) == 0
yds <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
test <- plays$Detail[61]
test
qbName <- substr(test,start = 1,stop = regexpr(' sack',test)-1)
#getting yards
temp <- strsplit(substr(test,start=1,stop=(regexpr(' yards',test)-1))," ")
yds <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # cleanup
?data.frame
results <- data.frame(GameID = character(10))
results <- data.frame(GameID = character(nrow(plays)),
Home = character(nrow(plays)),
Away = character(nrow(plays)),
Quarter = numeric(nrow(plays)),
Down = numeric(nrow(plays)),
Distance = numeric(nrow(plays)),
Location = numeric(nrow(plays)),
QB = character(nrow(plays)),
Target = character(nrow(plays)),
TargetPos = character(nrow(plays)),
Yards = numeric(nrow(plays)),
Penalty = character(nrow(plays)),
PointDiff = numeric(nrow(plays)))
View(results)
results <- data.frame(GameID = rep(gameid, nrow(plays)),
View(results)
View(results)
gameid
game_id
game
results <- data.frame(GameID = rep(gamelist[i], nrow(plays)),
Home = rep(homeTeam, nrow(plays)),
Away = rep(awayTeam, nrow(plays)),
Quarter = numeric(nrow(plays)),
Down = numeric(nrow(plays)),
Distance = numeric(nrow(plays)),
Location = numeric(nrow(plays)),
QB = character(nrow(plays)),
Target = character(nrow(plays)),
TargetPos = character(nrow(plays)),
Yards = numeric(nrow(plays)),
Penalty = character(nrow(plays)),
PointDiff = numeric(nrow(plays)))
View(results)
for (j in 1:5) {
detail <- plays$Detail[j]
if (regexpr(' pass',detail) > 0) {
#getting QB name
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' pass',detail)-1)
#getting target information
targetPos <- ifelse(regexpr(' complete to ',detail) > 0,
regexpr(' complete to ',detail),
regexpr(' intended for ',detail))
temp <- strsplit(substr(detail,start = targetPos, stop = nchar(detail)), " ")
results$Target[j] <- paste(temp[[1]][4],temp[[1]][5])
rm(targetPos,temp) # cleanup
#getting yards
temp <- strsplit(substr(detail,start=1,stop=(regexpr(' yards',detail)-1))," ")
results$Yards[j] <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # Cleanup
} else if (regexpr(' sack',detail) > 0) {
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' sack',detail)-1)
#getting yards
temp <- strsplit(substr(detail,start=1,stop=(regexpr(' yards',detail)-1))," ")
results$Yards[j] <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # cleanup
} else {
warning('Play contains no pass/sack')
}
}
View(results)
j=1
detail <- plays$Detail[j]
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' pass',detail)-1)
results[j, ]$QB <- substr(detail,start = 1,stop = regexpr(' pass',detail)-1)
View(results)
results[j, 8] <- substr(detail,start = 1,stop = regexpr(' pass',detail)-1)
typeof(results$QB)
View(results)
results <- data.frame(GameID = rep(gamelist[i], nrow(plays)),
Home = rep(homeTeam, nrow(plays)),
Away = rep(awayTeam, nrow(plays)),
Quarter = numeric(nrow(plays)),
Down = numeric(nrow(plays)),
Distance = numeric(nrow(plays)),
Location = numeric(nrow(plays)),
QB = character(nrow(plays)),
Target = character(nrow(plays)),
TargetPos = character(nrow(plays)),
Yards = numeric(nrow(plays)),
Penalty = character(nrow(plays)),
PointDiff = numeric(nrow(plays)),
stringsAsFactors = F)
View(results)
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' pass',detail)-1)
for (j in 1:5) {
detail <- plays$Detail[j]
if (regexpr(' pass',detail) > 0) {
#getting QB name
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' pass',detail)-1)
#getting target information
targetPos <- ifelse(regexpr(' complete to ',detail) > 0,
regexpr(' complete to ',detail),
regexpr(' intended for ',detail))
temp <- strsplit(substr(detail,start = targetPos, stop = nchar(detail)), " ")
results$Target[j] <- paste(temp[[1]][4],temp[[1]][5])
rm(targetPos,temp) # cleanup
#getting yards
temp <- strsplit(substr(detail,start=1,stop=(regexpr(' yards',detail)-1))," ")
results$Yards[j] <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # Cleanup
} else if (regexpr(' sack',detail) > 0) {
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' sack',detail)-1)
#getting yards
temp <- strsplit(substr(detail,start=1,stop=(regexpr(' yards',detail)-1))," ")
results$Yards[j] <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # cleanup
} else {
warning('Play contains no pass/sack')
}
}
View(results)
head(plays)
plays$Detail[1:5]
results$Penalty[j] <- grep('Penalty',detail)*(grep('Declined',detail)==0)
View(results)
results <- data.frame(GameID = rep(gamelist[i], nrow(plays)),
Home = rep(homeTeam, nrow(plays)),
Away = rep(awayTeam, nrow(plays)),
Quarter = numeric(nrow(plays)),
Poss = character(nrow(plays)),
Down = numeric(nrow(plays)),
Distance = numeric(nrow(plays)),
Location = numeric(nrow(plays)),
QB = character(nrow(plays)),
Target = character(nrow(plays)),
TargetPos = character(nrow(plays)),
Yards = numeric(nrow(plays)),
Penalty = numeric(nrow(plays)),
PointDiff = numeric(nrow(plays)),
stringsAsFactors = F)
for (j in 1:5) {
detail <- plays$Detail[j]
if (regexpr(' pass',detail) > 0) {
#getting QB name
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' pass',detail)-1)
#getting target information
targetPos <- ifelse(regexpr(' complete to ',detail) > 0,
regexpr(' complete to ',detail),
regexpr(' intended for ',detail))
temp <- strsplit(substr(detail,start = targetPos, stop = nchar(detail)), " ")
results$Target[j] <- paste(temp[[1]][4],temp[[1]][5])
rm(targetPos,temp) # cleanup
#getting yards
temp <- strsplit(substr(detail,start=1,stop=(regexpr(' yards',detail)-1))," ")
results$Yards[j] <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # Cleanup
results$Penalty[j] <- grep('Penalty',detail)*(grep('Declined',detail)==0)
} else if (regexpr(' sack',detail) > 0) {
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' sack',detail)-1)
#getting yards
temp <- strsplit(substr(detail,start=1,stop=(regexpr(' yards',detail)-1))," ")
results$Yards[j] <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # cleanup
} else {
warning('Play contains no pass/sack')
}
}
detail
grep('Declined',detail)
grep('Declined',detail)*8
as.numeric(grep('Declined',detail))
grep('Delcined',detail) > 0
ifelse(grep('Penalty',detail)>0 &
!(grep('Declined',detail)>0),1,0)
#initialize the data frame to hold everything we cherish
results <- data.frame(GameID = rep(gamelist[i], nrow(plays)),
Home = rep(homeTeam, nrow(plays)),
Away = rep(awayTeam, nrow(plays)),
Quarter = numeric(nrow(plays)),
Poss = character(nrow(plays)),
Down = numeric(nrow(plays)),
Distance = numeric(nrow(plays)),
Location = numeric(nrow(plays)),
QB = character(nrow(plays)),
Target = character(nrow(plays)),
TargetPos = character(nrow(plays)),
Yards = numeric(nrow(plays)),
Penalty = numeric(nrow(plays)),
PointDiff = numeric(nrow(plays)),
stringsAsFactors = F)
for (j in 1:5) {
detail <- plays$Detail[j]
if (regexpr(' pass',detail) > 0) {
#getting QB name
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' pass',detail)-1)
#getting target information
targetPos <- ifelse(regexpr(' complete to ',detail) > 0,
regexpr(' complete to ',detail),
regexpr(' intended for ',detail))
temp <- strsplit(substr(detail,start = targetPos, stop = nchar(detail)), " ")
results$Target[j] <- paste(temp[[1]][4],temp[[1]][5])
rm(targetPos,temp) # cleanup
#getting yards
temp <- strsplit(substr(detail,start=1,stop=(regexpr(' yards',detail)-1))," ")
results$Yards[j] <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # Cleanup
results$Penalty[j] <- ifelse(grep('Penalty',detail)>0 &
!(grep('Declined',detail)>0),1,0)
} else if (regexpr(' sack',detail) > 0) {
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' sack',detail)-1)
#getting yards
temp <- strsplit(substr(detail,start=1,stop=(regexpr(' yards',detail)-1))," ")
results$Yards[j] <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # cleanup
} else {
warning('Play contains no pass/sack')
}
}
# Pull in rosters to identify player designations
}
#initialize the data frame to hold everything we cherish
results <- data.frame(GameID = rep(gamelist[i], nrow(plays)),
Home = rep(homeTeam, nrow(plays)),
Away = rep(awayTeam, nrow(plays)),
Quarter = numeric(nrow(plays)),
Poss = character(nrow(plays)),
Down = numeric(nrow(plays)),
Distance = numeric(nrow(plays)),
Location = numeric(nrow(plays)),
QB = character(nrow(plays)),
Target = character(nrow(plays)),
TargetPos = character(nrow(plays)),
Yards = numeric(nrow(plays)),
Penalty = numeric(nrow(plays)),
PointDiff = numeric(nrow(plays)),
stringsAsFactors = F)
for (j in 1:5) {
detail <- plays$Detail[j]
if (regexpr(' pass',detail) > 0) {
#getting QB name
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' pass',detail)-1)
#getting target information
targetPos <- ifelse(regexpr(' complete to ',detail) > 0,
regexpr(' complete to ',detail),
regexpr(' intended for ',detail))
temp <- strsplit(substr(detail,start = targetPos, stop = nchar(detail)), " ")
results$Target[j] <- paste(temp[[1]][4],temp[[1]][5])
rm(targetPos,temp) # cleanup
#getting yards
temp <- strsplit(substr(detail,start=1,stop=(regexpr(' yards',detail)-1))," ")
results$Yards[j] <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # Cleanup
results$Penalty[j] <- ifelse(grep('Penalty',detail)>0 &
!(grep('Declined',detail)>0),1,0)
} else if (regexpr(' sack',detail) > 0) {
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' sack',detail)-1)
#getting yards
temp <- strsplit(substr(detail,start=1,stop=(regexpr(' yards',detail)-1))," ")
results$Yards[j] <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # cleanup
} else {
warning('Play contains no pass/sack')
}
}
ifelse(grep('Penalty',detail)>0 &
!(grep('Declined',detail)>0),1,0)
ifelse(length(grep('Penalty',detail))>0 &
(length(grep('Declined',detail))==0),1,0)
#initialize the data frame to hold everything we cherish
results <- data.frame(GameID = rep(gamelist[i], nrow(plays)),
Home = rep(homeTeam, nrow(plays)),
Away = rep(awayTeam, nrow(plays)),
Quarter = numeric(nrow(plays)),
Poss = character(nrow(plays)),
Down = numeric(nrow(plays)),
Distance = numeric(nrow(plays)),
Location = numeric(nrow(plays)),
QB = character(nrow(plays)),
Target = character(nrow(plays)),
TargetPos = character(nrow(plays)),
Yards = numeric(nrow(plays)),
Penalty = numeric(nrow(plays)),
PointDiff = numeric(nrow(plays)),
stringsAsFactors = F)
for (j in 1:5) {
detail <- plays$Detail[j]
if (regexpr(' pass',detail) > 0) {
#getting QB name
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' pass',detail)-1)
#getting target information
targetPos <- ifelse(regexpr(' complete to ',detail) > 0,
regexpr(' complete to ',detail),
regexpr(' intended for ',detail))
temp <- strsplit(substr(detail,start = targetPos, stop = nchar(detail)), " ")
results$Target[j] <- paste(temp[[1]][4],temp[[1]][5])
rm(targetPos,temp) # cleanup
#getting yards
temp <- strsplit(substr(detail,start=1,stop=(regexpr(' yards',detail)-1))," ")
results$Yards[j] <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # Cleanup
results$Penalty[j] <- ifelse(length(grep('Penalty',detail))>0 &
(length(grep('Declined',detail))==0),1,0)
} else if (regexpr(' sack',detail) > 0) {
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' sack',detail)-1)
#getting yards
temp <- strsplit(substr(detail,start=1,stop=(regexpr(' yards',detail)-1))," ")
results$Yards[j] <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # cleanup
} else {
warning('Play contains no pass/sack')
}
}
# Pull in rosters to identify player designations
View(results)
#initialize the data frame to hold everything we cherish
results <- data.frame(GameID = rep(gamelist[i], nrow(plays)),
Home = rep(homeTeam, nrow(plays)),
Away = rep(awayTeam, nrow(plays)),
Quarter = numeric(nrow(plays)),
Poss = character(nrow(plays)),
Down = numeric(nrow(plays)),
Distance = numeric(nrow(plays)),
Location = numeric(nrow(plays)),
QB = character(nrow(plays)),
Target = character(nrow(plays)),
TargetPos = character(nrow(plays)),
Yards = numeric(nrow(plays)),
Penalty = numeric(nrow(plays)),
PointDiff = numeric(nrow(plays)),
stringsAsFactors = F)
for (j in 1:nrow(plays)) {
detail <- plays$Detail[j]
if (regexpr(' pass',detail) > 0) {
#getting QB name
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' pass',detail)-1)
#getting target information
targetPos <- ifelse(regexpr(' complete to ',detail) > 0,
regexpr(' complete to ',detail),
regexpr(' intended for ',detail))
temp <- strsplit(substr(detail,start = targetPos, stop = nchar(detail)), " ")
results$Target[j] <- paste(temp[[1]][4],temp[[1]][5])
rm(targetPos,temp) # cleanup
#getting yards
temp <- strsplit(substr(detail,start=1,stop=(regexpr(' yards',detail)-1))," ")
results$Yards[j] <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # Cleanup
results$Penalty[j] <- ifelse(length(grep('Penalty',detail))>0 &
(length(grep('Declined',detail))==0),1,0)
} else if (regexpr(' sack',detail) > 0) {
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' sack',detail)-1)
#getting yards
temp <- strsplit(substr(detail,start=1,stop=(regexpr(' yards',detail)-1))," ")
results$Yards[j] <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # cleanup
} else {
warning('Play contains no pass/sack')
}
}
View(results)
sum(results$Penalty)
View(results)
View(plays)
results$PointDiff[j] <- as.numeric(plays[j, which(colnames(plays)==homeTeam)]) -
as.numeric(plays[j, which(colnames(plays)== awayTeam)])
#initialize the data frame to hold everything we cherish
results <- data.frame(GameID = rep(gamelist[i], nrow(plays)),
Home = rep(homeTeam, nrow(plays)),
Away = rep(awayTeam, nrow(plays)),
Quarter = numeric(nrow(plays)),
Poss = character(nrow(plays)),
Down = numeric(nrow(plays)),
Distance = numeric(nrow(plays)),
Location = numeric(nrow(plays)),
QB = character(nrow(plays)),
Target = character(nrow(plays)),
TargetPos = character(nrow(plays)),
Yards = numeric(nrow(plays)),
Penalty = numeric(nrow(plays)),
PointDiff = numeric(nrow(plays)),
stringsAsFactors = F)
for (j in 1:nrow(plays)) {
detail <- plays$Detail[j]
if (regexpr(' pass',detail) > 0) {
#getting QB name
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' pass',detail)-1)
#getting target information
targetPos <- ifelse(regexpr(' complete to ',detail) > 0,
regexpr(' complete to ',detail),
regexpr(' intended for ',detail))
temp <- strsplit(substr(detail,start = targetPos, stop = nchar(detail)), " ")
results$Target[j] <- paste(temp[[1]][4],temp[[1]][5])
rm(targetPos,temp) # cleanup
#getting yards
temp <- strsplit(substr(detail,start=1,stop=(regexpr(' yards',detail)-1))," ")
results$Yards[j] <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # Cleanup
results$Penalty[j] <- ifelse(length(grep('Penalty',detail))>0 &
(length(grep('Declined',detail))==0),1,0)
} else if (regexpr(' sack',detail) > 0) {
results$QB[j] <- substr(detail,start = 1,stop = regexpr(' sack',detail)-1)
#getting yards
temp <- strsplit(substr(detail,start=1,stop=(regexpr(' yards',detail)-1))," ")
results$Yards[j] <- ifelse(length(temp[[1]])==0, 0,
as.numeric(temp[[1]][length(temp[[1]])]))
rm(temp)  # cleanup
} else {
warning('Play contains no pass/sack')
}
#get quarter, down, and distance
results$Quarter[j] <- plays$Quarter[j]
results$Down[j] <- plays$Down[j]
results$Distance[j] <- plays$ToGo[j]
#calculate point differential -- always HOME - AWAY
results$PointDiff[j] <- as.numeric(plays[j, which(colnames(plays)==homeTeam)]) -
as.numeric(plays[j, which(colnames(plays)== awayTeam)])
}
View(results)
all(pointDiff[keepRows]==results$PointDiff)
length(pointDiff[keepRows])
head(pointDiff[keepRows])
all(pointDiff[keepRows[order(keepRows)]]==results$PointDiff)
rm(list=ls())
